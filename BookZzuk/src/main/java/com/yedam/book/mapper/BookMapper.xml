<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.book.mapper.BookMapper">

	<select id="getBookList" resultType="BookVO"
		parameterType="hashmap">
		SELECT item_id, cover, title, sale_price, std_price
		from
		(select ROWNUM RNUM, b.* from
		((select * from book
		order by ${sortCol}
		${sortMod}) b)
		where category Like '%${category}%' and title like '%${search}%')
		where RNUM
		BETWEEN ${page-1}*20+1 AND ${page}*20
	</select>
	<select id="countBookList" resultType="int"	parameterType="hashmap">
		SELECT count(item_id) cnt
		from (select item_id from book where category Like '%${category}%' and title like '%${search}%')
	</select>


	<select id="getBook" resultType="BookVO" parameterType="int">
		SELECT *
		from
		book
		where item_id = #{item_id}
	</select>

	<insert id="addBook" parameterType="BookVO">
		INSERT INTO book VALUES (
		book_pk_seq.NEXTVAL,
		'${title }',
		'${author }',
		'${pubDate}',
		'${description }',
		'${isbn }',
		${salePrice },
		${stdPrice },
		'${cover }',
		'${category }',
		'${publisher }',
		'n',
		0
		)

		<selectKey keyProperty="itemId" resultType="int"
			order="AFTER">
			SELECT book_pk_seq.CURRVAL FROM DUAL
		</selectKey>

	</insert>
	<update id="modBook" parameterType="BookVO">
		Update book set
		title='${title }',
		author='${author }',
		pub_date='${pubDate}',
		Description='${description }',
		isbn='${isbn }',
		sale_price=${salePrice },
		std_price=${stdPrice },
		cover='${cover }',
		category='${category }',
		publisher='${publisher }'
		where item_id = ${itemId}
	</update>

		<update id="remBook" parameterType="int">
		delete from book where item_id = ${itemId}
	</update>
	
	
	<select id="getRelatedBook" resultType="BookVO"
		parameterType="int">
		select item_id, cover, title, sale_Price,std_Price
		from
		book
		where
		category like '%'||(substr((SELECT category
		from
		book
		where
		item_id = ${itemId}),-3))||'%'
		AND ROWNUM &lt; 5
		ORDER BY
		dbms_random.value
	</select>

	<!-- 찜목록 조회 시작 -->
	<select id="getLikeList" resultType="BookVO">
		SELECT b.item_id
			 , cover
			 , title
			 , sale_price
			 , std_price
		  FROM member m
			 , book b
			 , book_like bLike
		 WHERE bLike.user_id = m.user_id
		   AND bLike.item_id = b.item_id
		   AND m.user_id = #{uid}
	</select>
	<!-- 찜목록 조회 끝 -->
	<!-- 전체 리스트 조회 시작 -->
	<select id="getAllBook" resultType="BookVO">
		SELECT item_id
		  FROM book
	</select>
	<!-- 전체 리스트 조회 끝 -->
	<!-- 평균 별점 갱신 시작 -->
	<update id="modifyRating">
		UPDATE book
		   SET avg_grade = ( SELECT ROUND(AVG(NVL(rating, 0)), 2)
							   FROM review
							  WHERE item_id = #{itemId} )
		 WHERE item_id = #{itemId}
	</update>
	<!-- 평균 별점 갱신 끝 -->
	<!-- 로그인 추천 도서 조회 시작 -->
	<select id="recomanList" resultType="BookVO">
		SELECT a.*
		  FROM ( SELECT *
				   FROM book
				  WHERE category IN ( SELECT category
										FROM book b
										   , book_order o
										   , order_detail d
									   WHERE o.order_num = d.order_num
										 AND d.item_id   = b.item_id
										 AND o.user_id = #{uid} )
				  ORDER BY NVL(avg_grade, 0) DESC ) a
		 WHERE ROWNUM BETWEEN 1 AND 7
	</select>
	<!-- 로그인 추천 도서 조회 끝 -->
	<!-- 비회원 추천 도서 조회 시작 -->
	<select id="recomanList2" resultType="BookVO">
		SELECT a.*
		  FROM ( SELECT *
				   FROM book
				  ORDER BY NVL(avg_grade, 0) DESC ) a
		 WHERE ROWNUM BETWEEN 1 AND 7
	</select>
	<!-- 비회원 추천 도서 조회 끝 -->
	<!-- 화재 도서 조회 시작 -->
	<select id="muchSellList" resultType="BookVO">
		SELECT b.*
		  FROM book b
			 , ( SELECT b.item_id
				  FROM book b
					 , order_detail d
				 WHERE b.item_id = d.item_id
				 GROUP BY b.item_id
				 ORDER BY SUM(item_cnt) DESC ) a
		 WHERE b.item_id = a.item_id
		   AND ROWNUM BETWEEN 1 AND 12
	</select>
	<!-- 화재 도서 조회 끝 -->
	<!-- 신간 도서 조회 시작 -->
	<select id="newBookList" resultType="BookVO">
		SELECT a.*
		  FROM ( SELECT *
		  		   FROM book
		 		  ORDER BY pub_date DESC ) a
		 WHERE ROWNUM BETWEEN 1 AND 6
	</select>
	<!-- 신간 도서 조회 끝 -->
	<!-- 리뷰 조회 시작 -->
	<select id="getReview" resultType="ReviewVO">
		SELECT a.*
		  FROM ( SELECT a.*
				   FROM ( SELECT r.*
							   , b.title
							   , b.cover
							FROM review r
							   , book b
						   WHERE r.item_id = b.item_id ) a
				  ORDER BY review_date DESC ) a
		 WHERE ROWNUM BETWEEN 1 AND 6
	</select>
	<!-- 리뷰 조회 끝 -->

</mapper>